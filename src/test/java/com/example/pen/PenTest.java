package com.example.pen;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.example.pen.pentypes.BallPointPen;
import com.example.pen.pentypes.FountainPen;
import com.example.pen.writingstrategies.RoughWritingStrategy;
import com.example.pen.writingstrategies.SmoothWritingStrategy;

public class PenTest {

    private Ink ink;
    private Nib nib;
    private Refill refill;

    @Before
    public void setUp() {
        ink = new Ink(InkType.INKTYPE1, Color.BROWN);
        nib = new Nib(NibType.CIRCULAR);
        refill = new Refill(ink, nib);
    }

    @Test
    public void testBallPen() {
        BallPointPen ballPointPen = new BallPointPen(refill, "flow", "butterflow", new SmoothWritingStrategy());
        Assert.assertNotNull(ballPointPen);

        Assert.assertTrue(ballPointPen instanceof BallPointPen);

        Assert.assertEquals("flow", ballPointPen.getName());

        ballPointPen.write();

    }

    @Test
    public void testFoutainPen() {
        FountainPen fountainPen = new FountainPen(ink, nib, "pour", "butterflow", new RoughWritingStrategy());
        Assert.assertNotNull(fountainPen);

        Assert.assertTrue(fountainPen instanceof FountainPen);

        Assert.assertEquals("pour", fountainPen.getName());
        Assert.assertEquals(Color.BROWN, fountainPen.getInk().getColor());
        Assert.assertEquals(NibType.CIRCULAR, fountainPen.getNib().getNibtype());
        Assert.assertEquals("butterflow", fountainPen.getBrand());
        fountainPen.write();
    }
}
